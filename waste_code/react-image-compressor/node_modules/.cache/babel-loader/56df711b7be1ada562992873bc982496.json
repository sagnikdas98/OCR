{"ast":null,"code":"var _jsxFileName = \"/home/zero/Documents/google_ocr/react-image-compressor/src/components/Upload.jsx\";\nimport React from \"react\";\nimport axios from 'axios';\nimport Button from \"react-bootstrap/Button\";\nimport UploadService from \"../services/upload-files.service\";\nexport default class Upload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUpload = e => {\n      this.setState({\n        isFile: true,\n        file: e.target.files,\n        fileName: e.target.files[0],\n        enableUploadButton: true\n      });\n    };\n\n    this.handleUploadButton = () => {\n      let currentFile = this.state.selectedFiles[0]; //\n\n      this.setState({\n        progress: 0,\n        currentFile: currentFile\n      });\n      UploadService.upload(currentFile, event => {\n        this.setState({\n          progress: Math.round(100 * event.loaded / event.total)\n        });\n      }).then(response => {\n        this.setState({\n          message: response.data.message\n        });\n        return UploadService.getFiles();\n      }).then(files => {\n        this.setState({\n          fileInfos: files.data\n        });\n      }).catch(() => {\n        this.setState({\n          progress: 0,\n          message: \"Could not upload the file!\",\n          currentFile: undefined\n        });\n      });\n      this.setState({\n        selectedFiles: undefined\n      });\n    };\n\n    this.state = {\n      isFile: false,\n      file: null,\n      fileName: '',\n      enableUploadButton: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"uploadComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      accept: \"image/*,application/pdf\",\n      className: \"mt-2 btn btn-dark w-75\",\n      onChange: this.handleUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-xl-4 col-lg-4 col-md-12 mb-5 mt-5 col-sm-12 d-flex justify-content-center align-items-baseline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), this.state.enableUploadButton ? React.createElement(\"button\", {\n      type: \"button\",\n      className: \" btn btn-dark\",\n      onClick: this.handleUploadButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Run OCR\") : React.createElement(React.Fragment, null)));\n  }\n\n}","map":{"version":3,"sources":["/home/zero/Documents/google_ocr/react-image-compressor/src/components/Upload.jsx"],"names":["React","axios","Button","UploadService","Upload","Component","constructor","props","handleUpload","e","setState","isFile","file","target","files","fileName","enableUploadButton","handleUploadButton","currentFile","state","selectedFiles","progress","upload","event","Math","round","loaded","total","then","response","message","data","getFiles","fileInfos","catch","undefined","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios'; \n\nimport Button from \"react-bootstrap/Button\";\nimport UploadService from \"../services/upload-files.service\";\n\nexport default class Upload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            isFile:false, file:null, fileName:'', enableUploadButton: false\n\n        };\n    }\n\n\n    handleUpload = (e) => {\n        \n        this.setState({isFile:true, file:e.target.files, fileName:e.target.files[0], enableUploadButton: true});\n\n    };\n\n    handleUploadButton = () =>{\n        let currentFile = this.state.selectedFiles[0]; //\n    \n        this.setState({\n          progress: 0,\n          currentFile: currentFile,\n        });\n    \n        UploadService.upload(currentFile, (event) => {\n          this.setState({\n            progress: Math.round((100 * event.loaded) / event.total),\n          });\n        })\n          .then((response) => {\n            this.setState({\n              message: response.data.message,\n            });\n            return UploadService.getFiles();\n          })\n          .then((files) => {\n            this.setState({\n              fileInfos: files.data,\n            });\n          })\n          .catch(() => {\n            this.setState({\n              progress: 0,\n              message: \"Could not upload the file!\",\n              currentFile: undefined,\n            });\n          });\n    \n        this.setState({\n          selectedFiles: undefined,\n        });\n    }\n\n    render() {\n        return (\n            <div id='uploadComponent'>\n                <div className=\"d-flex justify-content-center\">\n                    <input\n                        type=\"file\"\n                        accept=\"image/*,application/pdf\"\n                        className=\"mt-2 btn btn-dark w-75\"\n                        onChange={this.handleUpload}/>\n                </div>\n                <div className=\"col-xl-4 col-lg-4 col-md-12 mb-5 mt-5 col-sm-12 d-flex justify-content-center align-items-baseline\">\n                    <br />\n                    {this.state.enableUploadButton ? \n                    (<button\n                        type=\"button\"\n                        className=\" btn btn-dark\"\n                        onClick={this.handleUploadButton}>Run OCR</button>) : \n                        (<></>)}\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}