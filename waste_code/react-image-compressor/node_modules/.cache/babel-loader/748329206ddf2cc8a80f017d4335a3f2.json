{"ast":null,"code":"var _jsxFileName = \"/home/zero/Documents/SampleProjects/react-image-compressor/src/components/Upload.jsx\";\nimport React from \"react\";\nimport axios from 'axios';\nimport Card from \"react-bootstrap/Card\";\nexport default class Upload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUpload = event => {\n      TODO;\n      this.setState({\n        isFile: true,\n        file: null,\n        fileName: '',\n        enableUploadButton: true\n      });\n    };\n\n    this.handleUploadButton = event => {};\n\n    this.handle = e => {\n      const imageFile = e.target.files[0];\n      this.setState({\n        originalLink: URL.createObjectURL(imageFile),\n        originalImage: imageFile,\n        outputFileName: imageFile.name,\n        uploadImage: true\n      });\n    };\n\n    this.changeValue = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.click = e => {\n      e.preventDefault();\n      const options = {\n        maxSizeMB: 1,\n        maxWidthOrHeight: 500,\n        useWebWorker: true\n      };\n\n      if (options.maxSizeMB >= this.state.originalImage.size / 1024) {\n        alert(\"Image is too small, can't be Compressed!\");\n        return 0;\n      }\n\n      let output;\n      imageCompression(this.state.originalImage, options).then(x => {\n        output = x;\n        const downloadLink = URL.createObjectURL(output);\n        this.setState({\n          compressedLink: downloadLink\n        });\n      });\n      this.setState({\n        clicked: true\n      });\n      return 1;\n    };\n\n    this.state = {\n      isFile: false,\n      file: null,\n      fileName: '',\n      enableUploadButton: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"uploadComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.onFileChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.onFileUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Upload!\")));\n  }\n\n}","map":{"version":3,"sources":["/home/zero/Documents/SampleProjects/react-image-compressor/src/components/Upload.jsx"],"names":["React","axios","Card","Upload","Component","constructor","props","handleUpload","event","TODO","setState","isFile","file","fileName","enableUploadButton","handleUploadButton","handle","e","imageFile","target","files","originalLink","URL","createObjectURL","originalImage","outputFileName","name","uploadImage","changeValue","value","click","preventDefault","options","maxSizeMB","maxWidthOrHeight","useWebWorker","state","size","alert","output","imageCompression","then","x","downloadLink","compressedLink","clicked","render","onFileChange","onFileUpload"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios'; \n\nimport Card from \"react-bootstrap/Card\";\n\nexport default class Upload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            isFile:false, file:null, fileName:'', enableUploadButton: false\n\n        };\n    }\n\n\n    handleUpload = event => {\n        TODO\n        this.setState({isFile:true, file:null, fileName:'', enableUploadButton: true});\n    };\n\n    handleUploadButton = event =>{\n\n    };\n\n\n  handle = e => {\n    const imageFile = e.target.files[0];\n    this.setState({\n      originalLink: URL.createObjectURL(imageFile),\n      originalImage: imageFile,\n      outputFileName: imageFile.name,\n      uploadImage: true\n    });\n  };\n\n  changeValue = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  click = e => {\n    e.preventDefault();\n\n    const options = {\n      maxSizeMB: 1,\n      maxWidthOrHeight: 500,\n      useWebWorker: true\n    };\n\n    if (options.maxSizeMB >= this.state.originalImage.size / 1024) {\n      alert(\"Image is too small, can't be Compressed!\");\n      return 0;\n    }\n\n    let output;\n    imageCompression(this.state.originalImage, options).then(x => {\n      output = x;\n\n      const downloadLink = URL.createObjectURL(output);\n      this.setState({\n        compressedLink: downloadLink\n      });\n    });\n\n    this.setState({ clicked: true });\n    return 1;\n  };\n\n    render() {\n        return (\n            <div id='uploadComponent'>\n                <div className=\"\">\n                    <input type=\"file\" onChange={this.onFileChange} /> \n                    <button onClick={this.onFileUpload}>Upload!</button> \n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}