{"ast":null,"code":"var _jsxFileName = \"/home/zero/Documents/google_ocr/waste_code/react-image-compressor/src/components/Upload.jsx\";\nimport React from \"react\";\nimport axios from 'axios';\nimport Button from \"react-bootstrap/Button\";\nimport UploadService from \"../services/upload-files.service\";\nimport OCRWindow from \"./OCRWindow\";\nexport default class Upload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePages = e => {\n      this.state = {\n        isFile: true,\n        file: e.target.files,\n        enableUploadButton: true,\n        setOCRWindow: true\n      };\n      this.setState(this.state);\n    };\n\n    this.handleUploadButton = () => {\n      // let currentFile = this.state.selectedFiles[0]; //\n      this.state.setOCRWindow = true;\n      this.setState(this.state); // UploadService.upload(currentFile, (event) => {\n      //   this.setState({\n      //     progress: Math.round((100 * event.loaded) / event.total),\n      //   });\n      // })\n      //   .then((response) => {\n      //     this.setState({\n      //       message: response.data.message,\n      //     });\n      //     return UploadService.getFiles();\n      //   })\n      //   .then((files) => {\n      //     this.setState({\n      //       fileInfos: files.data,\n      //     });\n      //   })\n      //   .catch(() => {\n      //     this.setState({\n      //       progress: 0,\n      //       message: \"Could not upload the file!\",\n      //       currentFile: undefined,\n      //     });\n      //   });\n      // this.setState({\n      //   selectedFiles: undefined,\n      // });\n    };\n\n    this.state = {\n      isFile: false,\n      file: null,\n      fileName: '',\n      enableUploadButton: false,\n      setOCRWindow: false\n    };\n  }\n\n  render() {\n    return this.state.enableUploadButton ? React.createElement(OCRWindow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      id: \"uploadComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      accept: \"image/*,application/pdf\",\n      className: \"mt-2 btn btn-dark w-75\",\n      onChange: this.handleUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-xl-4 col-lg-4 col-md-12 mb-5 mt-5 col-sm-12 d-flex justify-content-center align-items-baseline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), this.state.enableUploadButton ? React.createElement(\"button\", {\n      type: \"button\",\n      className: \" btn btn-dark\",\n      onClick: this.handleUploadButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Run OCR \") : React.createElement(React.Fragment, null)));\n  }\n\n}","map":{"version":3,"sources":["/home/zero/Documents/google_ocr/waste_code/react-image-compressor/src/components/Upload.jsx"],"names":["React","axios","Button","UploadService","OCRWindow","Upload","Component","constructor","props","handlePages","e","state","isFile","file","target","files","enableUploadButton","setOCRWindow","setState","handleUploadButton","fileName","render","handleUpload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,eAAe,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,WAVmB,GAUJC,CAAD,IAAO;AAEjB,WAAKC,KAAL,GAAa;AAACC,QAAAA,MAAM,EAAC,IAAR;AAAcC,QAAAA,IAAI,EAACH,CAAC,CAACI,MAAF,CAASC,KAA5B;AAAmCC,QAAAA,kBAAkB,EAAE,IAAvD;AAA6DC,QAAAA,YAAY,EAAE;AAA3E,OAAb;AACA,WAAKC,QAAL,CAAc,KAAKP,KAAnB;AAEH,KAfkB;;AAAA,SAiBnBQ,kBAjBmB,GAiBE,MAAK;AACtB;AACA,WAAKR,KAAL,CAAWM,YAAX,GAA0B,IAA1B;AACA,WAAKC,QAAL,CAAc,KAAKP,KAAnB,EAHsB,CAKtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACH,KAjDkB;;AAEf,SAAKA,KAAL,GAAa;AAETC,MAAAA,MAAM,EAAC,KAFE;AAEKC,MAAAA,IAAI,EAAC,IAFV;AAEgBO,MAAAA,QAAQ,EAAC,EAFzB;AAE6BJ,MAAAA,kBAAkB,EAAE,KAFjD;AAEwDC,MAAAA,YAAY,EAAE;AAFtE,KAAb;AAKH;;AA4CDI,EAAAA,MAAM,GAAG;AACL,WACE,KAAKV,KAAL,CAAWK,kBAAX,GAAiC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjC,GAEG;AAAK,MAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,MAAM,EAAC,yBAFX;AAGI,MAAA,SAAS,EAAC,wBAHd;AAII,MAAA,QAAQ,EAAE,KAAKM,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH,EAQG;AAAK,MAAA,SAAS,EAAC,oGAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKX,KAAL,CAAWK,kBAAX,GACA;AACG,MAAA,IAAI,EAAC,QADR;AAEG,MAAA,SAAS,EAAC,eAFb;AAGD,MAAA,OAAO,EAAE,KAAKG,kBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,GAKI,yCAPT,CARH,CAHL;AAsBH;;AA3E+C","sourcesContent":["import React from \"react\";\nimport axios from 'axios'; \n\nimport Button from \"react-bootstrap/Button\";\nimport UploadService from \"../services/upload-files.service\";\n\nimport OCRWindow from \"./OCRWindow\";\n\nexport default class Upload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            isFile:false, file:null, fileName:'', enableUploadButton: false, setOCRWindow: false\n\n        };\n    }\n\n\n    handlePages = (e) => {\n        \n        this.state = {isFile:true, file:e.target.files, enableUploadButton: true, setOCRWindow: true};\n        this.setState(this.state);\n\n    };\n\n    handleUploadButton = () =>{\n        // let currentFile = this.state.selectedFiles[0]; //\n        this.state.setOCRWindow = true;\n        this.setState(this.state);\n    \n        // UploadService.upload(currentFile, (event) => {\n        //   this.setState({\n        //     progress: Math.round((100 * event.loaded) / event.total),\n        //   });\n        // })\n        //   .then((response) => {\n        //     this.setState({\n        //       message: response.data.message,\n        //     });\n        //     return UploadService.getFiles();\n        //   })\n        //   .then((files) => {\n        //     this.setState({\n        //       fileInfos: files.data,\n        //     });\n        //   })\n        //   .catch(() => {\n        //     this.setState({\n        //       progress: 0,\n        //       message: \"Could not upload the file!\",\n        //       currentFile: undefined,\n        //     });\n        //   });\n    \n        // this.setState({\n        //   selectedFiles: undefined,\n        // });\n    }\n\n    render() {\n        return (\n          this.state.enableUploadButton ? (<OCRWindow />) :\n            \n            (<div id='uploadComponent'>\n                <div className=\"d-flex justify-content-center\">\n                    <input\n                        type=\"file\"\n                        accept=\"image/*,application/pdf\"\n                        className=\"mt-2 btn btn-dark w-75\"\n                        onChange={this.handleUpload}/>\n                </div>\n                <div className=\"col-xl-4 col-lg-4 col-md-12 mb-5 mt-5 col-sm-12 d-flex justify-content-center align-items-baseline\">\n                    <br />\n                    {this.state.enableUploadButton ? \n                    (<button\n                        type=\"button\"\n                        className=\" btn btn-dark\"\n                    onClick={this.handleUploadButton}>Run OCR </button>) : \n                        (<></>)}\n                </div>\n            </div>)\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}